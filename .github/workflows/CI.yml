# CICD using GitHub actions

name: CI/CD

# Exclude workflow to run on changes to the helm chart
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Backend dependencies
      run: |
        cd backend
        npm install
        npm install -g nodemon

    - name: Run backend tests
      run: |
        cd backend
        npm test
      env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: test

    - name: Lint backend code
      run: |
        cd backend
        npm run lint

    - name: SonarQube Scan - Backend
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: backend


    - name: Install Frontend dependencies
      run: |
        cd frontend
        npm install --legacy-peer-deps

    - name: Run frontend tests
      run: |
        cd frontend
        npm test

    - name: Lint frontend code
      run: |
        cd frontend
        npm run lint

    - name: SonarQube Scan - Frontend
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: frontend

  push:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: List files in frontend directory
      run: |
        ls -al frontend

    - name: Build and Push action for frontend
      uses: docker/build-push-action@v6
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-blogs-frontend:${{github.run_id}}

    - name: Build and Push action for backend
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-blogs-backend:${{github.run_id}}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest

    needs: push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/my-blog-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "jindalankit940@gmail.com"
        git config --global user.name "Ankit Jindal"
        git add helm/my-blog-app-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push